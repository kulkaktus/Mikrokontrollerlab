
mkl.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000044  00800100  000007b2  00000846  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007b2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800144  00800144  0000088a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000088a  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000c0  00000000  00000000  000008e6  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000667  00000000  00000000  000009a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000042e  00000000  00000000  0000100d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000489  00000000  00000000  0000143b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000118  00000000  00000000  000018c4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001fa  00000000  00000000  000019dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001ac  00000000  00000000  00001bd6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000070  00000000  00000000  00001d82  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4b c0       	rjmp	.+150    	; 0x98 <__ctors_end>
   2:	00 00       	nop
   4:	66 c0       	rjmp	.+204    	; 0xd2 <__bad_interrupt>
   6:	00 00       	nop
   8:	64 c0       	rjmp	.+200    	; 0xd2 <__bad_interrupt>
   a:	00 00       	nop
   c:	62 c0       	rjmp	.+196    	; 0xd2 <__bad_interrupt>
   e:	00 00       	nop
  10:	60 c0       	rjmp	.+192    	; 0xd2 <__bad_interrupt>
  12:	00 00       	nop
  14:	5e c0       	rjmp	.+188    	; 0xd2 <__bad_interrupt>
  16:	00 00       	nop
  18:	5c c0       	rjmp	.+184    	; 0xd2 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	5a c0       	rjmp	.+180    	; 0xd2 <__bad_interrupt>
  1e:	00 00       	nop
  20:	58 c0       	rjmp	.+176    	; 0xd2 <__bad_interrupt>
  22:	00 00       	nop
  24:	56 c0       	rjmp	.+172    	; 0xd2 <__bad_interrupt>
  26:	00 00       	nop
  28:	54 c0       	rjmp	.+168    	; 0xd2 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	52 c0       	rjmp	.+164    	; 0xd2 <__bad_interrupt>
  2e:	00 00       	nop
  30:	50 c0       	rjmp	.+160    	; 0xd2 <__bad_interrupt>
  32:	00 00       	nop
  34:	4e c0       	rjmp	.+156    	; 0xd2 <__bad_interrupt>
  36:	00 00       	nop
  38:	4c c0       	rjmp	.+152    	; 0xd2 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4a c0       	rjmp	.+148    	; 0xd2 <__bad_interrupt>
  3e:	00 00       	nop
  40:	48 c0       	rjmp	.+144    	; 0xd2 <__bad_interrupt>
  42:	00 00       	nop
  44:	46 c0       	rjmp	.+140    	; 0xd2 <__bad_interrupt>
  46:	00 00       	nop
  48:	44 c0       	rjmp	.+136    	; 0xd2 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	42 c0       	rjmp	.+132    	; 0xd2 <__bad_interrupt>
  4e:	00 00       	nop
  50:	40 c0       	rjmp	.+128    	; 0xd2 <__bad_interrupt>
  52:	00 00       	nop
  54:	3e c0       	rjmp	.+124    	; 0xd2 <__bad_interrupt>
  56:	00 00       	nop
  58:	3c c0       	rjmp	.+120    	; 0xd2 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3a c0       	rjmp	.+116    	; 0xd2 <__bad_interrupt>
  5e:	00 00       	nop
  60:	38 c0       	rjmp	.+112    	; 0xd2 <__bad_interrupt>
  62:	00 00       	nop
  64:	36 c0       	rjmp	.+108    	; 0xd2 <__bad_interrupt>
  66:	00 00       	nop
  68:	34 c0       	rjmp	.+104    	; 0xd2 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	32 c0       	rjmp	.+100    	; 0xd2 <__bad_interrupt>
  6e:	00 00       	nop
  70:	30 c0       	rjmp	.+96     	; 0xd2 <__bad_interrupt>
  72:	00 00       	nop
  74:	2e c0       	rjmp	.+92     	; 0xd2 <__bad_interrupt>
  76:	00 00       	nop
  78:	2c c0       	rjmp	.+88     	; 0xd2 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2a c0       	rjmp	.+84     	; 0xd2 <__bad_interrupt>
  7e:	00 00       	nop
  80:	28 c0       	rjmp	.+80     	; 0xd2 <__bad_interrupt>
  82:	00 00       	nop
  84:	26 c0       	rjmp	.+76     	; 0xd2 <__bad_interrupt>
  86:	00 00       	nop
  88:	24 c0       	rjmp	.+72     	; 0xd2 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	22 c0       	rjmp	.+68     	; 0xd2 <__bad_interrupt>
  8e:	00 00       	nop
  90:	20 c0       	rjmp	.+64     	; 0xd2 <__bad_interrupt>
  92:	00 00       	nop
  94:	1e c0       	rjmp	.+60     	; 0xd2 <__bad_interrupt>
	...

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d0 e2       	ldi	r29, 0x20	; 32
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
  a4:	11 e0       	ldi	r17, 0x01	; 1
  a6:	a0 e0       	ldi	r26, 0x00	; 0
  a8:	b1 e0       	ldi	r27, 0x01	; 1
  aa:	e2 eb       	ldi	r30, 0xB2	; 178
  ac:	f7 e0       	ldi	r31, 0x07	; 7
  ae:	00 e0       	ldi	r16, 0x00	; 0
  b0:	0b bf       	out	0x3b, r16	; 59
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x14>
  b4:	07 90       	elpm	r0, Z+
  b6:	0d 92       	st	X+, r0
  b8:	a4 34       	cpi	r26, 0x44	; 68
  ba:	b1 07       	cpc	r27, r17
  bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0x10>

000000be <__do_clear_bss>:
  be:	21 e0       	ldi	r18, 0x01	; 1
  c0:	a4 e4       	ldi	r26, 0x44	; 68
  c2:	b1 e0       	ldi	r27, 0x01	; 1
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
  c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
  c8:	aa 34       	cpi	r26, 0x4A	; 74
  ca:	b2 07       	cpc	r27, r18
  cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
  ce:	5d d0       	rcall	.+186    	; 0x18a <main>
  d0:	6e c3       	rjmp	.+1756   	; 0x7ae <_exit>

000000d2 <__bad_interrupt>:
  d2:	96 cf       	rjmp	.-212    	; 0x0 <__vectors>

000000d4 <adc_init>:
#include <stdio.h>
#include "adc.h"

int adc_init(){

	ADCSRA = (1 << ADEN);	
  d4:	ea e7       	ldi	r30, 0x7A	; 122
  d6:	f0 e0       	ldi	r31, 0x00	; 0
  d8:	80 e8       	ldi	r24, 0x80	; 128
  da:	80 83       	st	Z, r24
	//Setting prescaling, division factor 128, think this works. Should be 1 1 1
	ADCSRA |= (7 << ADPS0);
  dc:	80 81       	ld	r24, Z
  de:	87 60       	ori	r24, 0x07	; 7
  e0:	80 83       	st	Z, r24
}
  e2:	08 95       	ret

000000e4 <adc_read>:

int adc_read(unsigned char n){
	if(n == 'x'){
  e4:	88 37       	cpi	r24, 0x78	; 120
  e6:	19 f4       	brne	.+6      	; 0xee <adc_read+0xa>
		ADMUX = 0;
  e8:	10 92 7c 00 	sts	0x007C, r1
  ec:	0c c0       	rjmp	.+24     	; 0x106 <adc_read+0x22>
	}
	else if (n == 'y'){
  ee:	89 37       	cpi	r24, 0x79	; 121
  f0:	21 f4       	brne	.+8      	; 0xfa <adc_read+0x16>
		ADMUX = 1;
  f2:	81 e0       	ldi	r24, 0x01	; 1
  f4:	80 93 7c 00 	sts	0x007C, r24
  f8:	06 c0       	rjmp	.+12     	; 0x106 <adc_read+0x22>
	}
	else{
		printf("ADC error you suck\n");
  fa:	8e e0       	ldi	r24, 0x0E	; 14
  fc:	91 e0       	ldi	r25, 0x01	; 1
  fe:	96 d0       	rcall	.+300    	; 0x22c <puts>
		return 0;
 100:	80 e0       	ldi	r24, 0x00	; 0
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	08 95       	ret
	}
	
	
	
	//Start conversion
	ADCSRA |= (1 << ADSC);
 106:	ea e7       	ldi	r30, 0x7A	; 122
 108:	f0 e0       	ldi	r31, 0x00	; 0
 10a:	80 81       	ld	r24, Z
 10c:	80 64       	ori	r24, 0x40	; 64
 10e:	80 83       	st	Z, r24
	
	//Waits for current conversion to finish
	while (! (ADCSRA & (1 << ADIF))){
 110:	80 81       	ld	r24, Z
 112:	84 ff       	sbrs	r24, 4
 114:	fd cf       	rjmp	.-6      	; 0x110 <adc_read+0x2c>
	}
	
	//Read data
	int result = ADC;
 116:	20 91 78 00 	lds	r18, 0x0078
 11a:	30 91 79 00 	lds	r19, 0x0079
	return result;
 11e:	82 2f       	mov	r24, r18
 120:	93 2f       	mov	r25, r19
}
 122:	08 95       	ret

00000124 <led_set>:
	
}

void led_set(int n, int v){
	// Skifter bit v n plasser inn i register PORTB
	if (v == 1){
 124:	61 30       	cpi	r22, 0x01	; 1
 126:	71 05       	cpc	r23, r1
 128:	79 f4       	brne	.+30     	; 0x148 <led_set+0x24>
		PORTB &= ~(1 << 2*n);
 12a:	45 b1       	in	r20, 0x05	; 5
 12c:	9c 01       	movw	r18, r24
 12e:	22 0f       	add	r18, r18
 130:	33 1f       	adc	r19, r19
 132:	81 e0       	ldi	r24, 0x01	; 1
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	02 c0       	rjmp	.+4      	; 0x13c <led_set+0x18>
 138:	88 0f       	add	r24, r24
 13a:	99 1f       	adc	r25, r25
 13c:	2a 95       	dec	r18
 13e:	e2 f7       	brpl	.-8      	; 0x138 <led_set+0x14>
 140:	80 95       	com	r24
 142:	84 23       	and	r24, r20
 144:	85 b9       	out	0x05, r24	; 5
 146:	08 95       	ret
	}
	else{
		PORTB |= (1 << 2*n);
 148:	65 b1       	in	r22, 0x05	; 5
 14a:	9c 01       	movw	r18, r24
 14c:	22 0f       	add	r18, r18
 14e:	33 1f       	adc	r19, r19
 150:	41 e0       	ldi	r20, 0x01	; 1
 152:	50 e0       	ldi	r21, 0x00	; 0
 154:	ca 01       	movw	r24, r20
 156:	02 c0       	rjmp	.+4      	; 0x15c <led_set+0x38>
 158:	88 0f       	add	r24, r24
 15a:	99 1f       	adc	r25, r25
 15c:	2a 95       	dec	r18
 15e:	e2 f7       	brpl	.-8      	; 0x158 <led_set+0x34>
 160:	86 2b       	or	r24, r22
 162:	85 b9       	out	0x05, r24	; 5
 164:	08 95       	ret

00000166 <led_init>:
 * Created: 20.03.2017 17:37:14
 *  Author: didrikr
 */ 
#include <avr/io.h>

void led_init(){
 166:	cf 93       	push	r28
 168:	df 93       	push	r29
	// Sett input og output. 0 er input. LED og switch annenhver
	DDRB |= 0b01010101;
 16a:	84 b1       	in	r24, 0x04	; 4
 16c:	85 65       	ori	r24, 0x55	; 85
 16e:	84 b9       	out	0x04, r24	; 4
	
	for (int i=0; i<4; i++){
 170:	c0 e0       	ldi	r28, 0x00	; 0
 172:	d0 e0       	ldi	r29, 0x00	; 0
		led_set(i, 0);
 174:	60 e0       	ldi	r22, 0x00	; 0
 176:	70 e0       	ldi	r23, 0x00	; 0
 178:	ce 01       	movw	r24, r28
 17a:	d4 df       	rcall	.-88     	; 0x124 <led_set>

void led_init(){
	// Sett input og output. 0 er input. LED og switch annenhver
	DDRB |= 0b01010101;
	
	for (int i=0; i<4; i++){
 17c:	21 96       	adiw	r28, 0x01	; 1
 17e:	c4 30       	cpi	r28, 0x04	; 4
 180:	d1 05       	cpc	r29, r1
 182:	c1 f7       	brne	.-16     	; 0x174 <led_init+0xe>
		led_set(i, 0);
	}
	
}
 184:	df 91       	pop	r29
 186:	cf 91       	pop	r28
 188:	08 95       	ret

0000018a <main>:
#include "uart.h"
#include "adc.h"

int main(void)
{
	led_init();
 18a:	ed df       	rcall	.-38     	; 0x166 <led_init>
	switch_init();
 18c:	1d d0       	rcall	.+58     	; 0x1c8 <switch_init>
	uart_init();
 18e:	2a d0       	rcall	.+84     	; 0x1e4 <uart_init>
	adc_init();
 190:	a1 df       	rcall	.-190    	; 0xd4 <adc_init>
		x = adc_read('x');
		y = adc_read('y');
		
		
		printf("Didrik er en torsk\n");
		printf("X: %d \t Y: %d\n", x, y);
 192:	c4 e3       	ldi	r28, 0x34	; 52
 194:	d1 e0       	ldi	r29, 0x01	; 1
	
    while(1)
    {
        int x, y;
		
		x = adc_read('x');
 196:	88 e7       	ldi	r24, 0x78	; 120
 198:	a5 df       	rcall	.-182    	; 0xe4 <adc_read>
 19a:	18 2f       	mov	r17, r24
 19c:	09 2f       	mov	r16, r25
		y = adc_read('y');
 19e:	89 e7       	ldi	r24, 0x79	; 121
 1a0:	a1 df       	rcall	.-190    	; 0xe4 <adc_read>
 1a2:	f8 2e       	mov	r15, r24
 1a4:	e9 2e       	mov	r14, r25
		
		
		printf("Didrik er en torsk\n");
 1a6:	81 e2       	ldi	r24, 0x21	; 33
 1a8:	91 e0       	ldi	r25, 0x01	; 1
 1aa:	40 d0       	rcall	.+128    	; 0x22c <puts>
		printf("X: %d \t Y: %d\n", x, y);
 1ac:	ef 92       	push	r14
 1ae:	ff 92       	push	r15
 1b0:	0f 93       	push	r16
 1b2:	1f 93       	push	r17
 1b4:	df 93       	push	r29
 1b6:	cf 93       	push	r28
 1b8:	28 d0       	rcall	.+80     	; 0x20a <printf>
 1ba:	0f 90       	pop	r0
 1bc:	0f 90       	pop	r0
 1be:	0f 90       	pop	r0
 1c0:	0f 90       	pop	r0
 1c2:	0f 90       	pop	r0
 1c4:	0f 90       	pop	r0
 1c6:	e7 cf       	rjmp	.-50     	; 0x196 <main+0xc>

000001c8 <switch_init>:
 *  Author: didrikr
 */ 
#include <avr/io.h>

void switch_init(){
	DDRB &= ~((1 << DDB1) | (1 << DDB3) | (1 << DDB5) | (1 << DDB7)); 
 1c8:	84 b1       	in	r24, 0x04	; 4
 1ca:	85 75       	andi	r24, 0x55	; 85
 1cc:	84 b9       	out	0x04, r24	; 4
 1ce:	08 95       	ret

000001d0 <uart_putchar>:
	stdout = &usart_stdout;
}


int uart_putchar(char c){
	while (!(UCSR1A & (1 << UDRE1))){
 1d0:	e8 ec       	ldi	r30, 0xC8	; 200
 1d2:	f0 e0       	ldi	r31, 0x00	; 0
 1d4:	90 81       	ld	r25, Z
 1d6:	95 ff       	sbrs	r25, 5
 1d8:	fd cf       	rjmp	.-6      	; 0x1d4 <uart_putchar+0x4>
		;
	}
	UDR1 = c;
 1da:	80 93 ce 00 	sts	0x00CE, r24
	return 0;
}
 1de:	80 e0       	ldi	r24, 0x00	; 0
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	08 95       	ret

000001e4 <uart_init>:

void uart_init(){
	unsigned long baud = 19200;
	unsigned long ubrrval = (F_CPU/16)/baud-1;
	/* Set baud rate*/
	UBRR1 = ubrrval;
 1e4:	83 e3       	ldi	r24, 0x33	; 51
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	90 93 cd 00 	sts	0x00CD, r25
 1ec:	80 93 cc 00 	sts	0x00CC, r24
	/* Enable transmitter*/
	UCSR1B = (1<<TXEN1);
 1f0:	88 e0       	ldi	r24, 0x08	; 8
 1f2:	80 93 c9 00 	sts	0x00C9, r24
	/*Set frame format: 8data*/
	UCSR1C = (3<<UCSZ10);
 1f6:	86 e0       	ldi	r24, 0x06	; 6
 1f8:	80 93 ca 00 	sts	0x00CA, r24
	
	stdout = &usart_stdout;
 1fc:	80 e0       	ldi	r24, 0x00	; 0
 1fe:	91 e0       	ldi	r25, 0x01	; 1
 200:	90 93 47 01 	sts	0x0147, r25
 204:	80 93 46 01 	sts	0x0146, r24
 208:	08 95       	ret

0000020a <printf>:
 20a:	cf 93       	push	r28
 20c:	df 93       	push	r29
 20e:	cd b7       	in	r28, 0x3d	; 61
 210:	de b7       	in	r29, 0x3e	; 62
 212:	fe 01       	movw	r30, r28
 214:	35 96       	adiw	r30, 0x05	; 5
 216:	61 91       	ld	r22, Z+
 218:	71 91       	ld	r23, Z+
 21a:	af 01       	movw	r20, r30
 21c:	80 91 46 01 	lds	r24, 0x0146
 220:	90 91 47 01 	lds	r25, 0x0147
 224:	30 d0       	rcall	.+96     	; 0x286 <vfprintf>
 226:	df 91       	pop	r29
 228:	cf 91       	pop	r28
 22a:	08 95       	ret

0000022c <puts>:
 22c:	0f 93       	push	r16
 22e:	1f 93       	push	r17
 230:	cf 93       	push	r28
 232:	df 93       	push	r29
 234:	e0 91 46 01 	lds	r30, 0x0146
 238:	f0 91 47 01 	lds	r31, 0x0147
 23c:	23 81       	ldd	r18, Z+3	; 0x03
 23e:	21 ff       	sbrs	r18, 1
 240:	1b c0       	rjmp	.+54     	; 0x278 <puts+0x4c>
 242:	ec 01       	movw	r28, r24
 244:	00 e0       	ldi	r16, 0x00	; 0
 246:	10 e0       	ldi	r17, 0x00	; 0
 248:	89 91       	ld	r24, Y+
 24a:	60 91 46 01 	lds	r22, 0x0146
 24e:	70 91 47 01 	lds	r23, 0x0147
 252:	db 01       	movw	r26, r22
 254:	18 96       	adiw	r26, 0x08	; 8
 256:	ed 91       	ld	r30, X+
 258:	fc 91       	ld	r31, X
 25a:	19 97       	sbiw	r26, 0x09	; 9
 25c:	88 23       	and	r24, r24
 25e:	31 f0       	breq	.+12     	; 0x26c <puts+0x40>
 260:	09 95       	icall
 262:	89 2b       	or	r24, r25
 264:	89 f3       	breq	.-30     	; 0x248 <puts+0x1c>
 266:	0f ef       	ldi	r16, 0xFF	; 255
 268:	1f ef       	ldi	r17, 0xFF	; 255
 26a:	ee cf       	rjmp	.-36     	; 0x248 <puts+0x1c>
 26c:	8a e0       	ldi	r24, 0x0A	; 10
 26e:	09 95       	icall
 270:	89 2b       	or	r24, r25
 272:	11 f4       	brne	.+4      	; 0x278 <puts+0x4c>
 274:	c8 01       	movw	r24, r16
 276:	02 c0       	rjmp	.+4      	; 0x27c <puts+0x50>
 278:	8f ef       	ldi	r24, 0xFF	; 255
 27a:	9f ef       	ldi	r25, 0xFF	; 255
 27c:	df 91       	pop	r29
 27e:	cf 91       	pop	r28
 280:	1f 91       	pop	r17
 282:	0f 91       	pop	r16
 284:	08 95       	ret

00000286 <vfprintf>:
 286:	2f 92       	push	r2
 288:	3f 92       	push	r3
 28a:	4f 92       	push	r4
 28c:	5f 92       	push	r5
 28e:	6f 92       	push	r6
 290:	7f 92       	push	r7
 292:	8f 92       	push	r8
 294:	9f 92       	push	r9
 296:	af 92       	push	r10
 298:	bf 92       	push	r11
 29a:	cf 92       	push	r12
 29c:	df 92       	push	r13
 29e:	ef 92       	push	r14
 2a0:	ff 92       	push	r15
 2a2:	0f 93       	push	r16
 2a4:	1f 93       	push	r17
 2a6:	cf 93       	push	r28
 2a8:	df 93       	push	r29
 2aa:	cd b7       	in	r28, 0x3d	; 61
 2ac:	de b7       	in	r29, 0x3e	; 62
 2ae:	2c 97       	sbiw	r28, 0x0c	; 12
 2b0:	0f b6       	in	r0, 0x3f	; 63
 2b2:	f8 94       	cli
 2b4:	de bf       	out	0x3e, r29	; 62
 2b6:	0f be       	out	0x3f, r0	; 63
 2b8:	cd bf       	out	0x3d, r28	; 61
 2ba:	7c 01       	movw	r14, r24
 2bc:	6b 01       	movw	r12, r22
 2be:	8a 01       	movw	r16, r20
 2c0:	fc 01       	movw	r30, r24
 2c2:	17 82       	std	Z+7, r1	; 0x07
 2c4:	16 82       	std	Z+6, r1	; 0x06
 2c6:	83 81       	ldd	r24, Z+3	; 0x03
 2c8:	81 ff       	sbrs	r24, 1
 2ca:	b0 c1       	rjmp	.+864    	; 0x62c <vfprintf+0x3a6>
 2cc:	ce 01       	movw	r24, r28
 2ce:	01 96       	adiw	r24, 0x01	; 1
 2d0:	4c 01       	movw	r8, r24
 2d2:	f7 01       	movw	r30, r14
 2d4:	93 81       	ldd	r25, Z+3	; 0x03
 2d6:	f6 01       	movw	r30, r12
 2d8:	93 fd       	sbrc	r25, 3
 2da:	85 91       	lpm	r24, Z+
 2dc:	93 ff       	sbrs	r25, 3
 2de:	81 91       	ld	r24, Z+
 2e0:	6f 01       	movw	r12, r30
 2e2:	88 23       	and	r24, r24
 2e4:	09 f4       	brne	.+2      	; 0x2e8 <vfprintf+0x62>
 2e6:	9e c1       	rjmp	.+828    	; 0x624 <vfprintf+0x39e>
 2e8:	85 32       	cpi	r24, 0x25	; 37
 2ea:	39 f4       	brne	.+14     	; 0x2fa <vfprintf+0x74>
 2ec:	93 fd       	sbrc	r25, 3
 2ee:	85 91       	lpm	r24, Z+
 2f0:	93 ff       	sbrs	r25, 3
 2f2:	81 91       	ld	r24, Z+
 2f4:	6f 01       	movw	r12, r30
 2f6:	85 32       	cpi	r24, 0x25	; 37
 2f8:	21 f4       	brne	.+8      	; 0x302 <vfprintf+0x7c>
 2fa:	b7 01       	movw	r22, r14
 2fc:	90 e0       	ldi	r25, 0x00	; 0
 2fe:	c7 d1       	rcall	.+910    	; 0x68e <fputc>
 300:	e8 cf       	rjmp	.-48     	; 0x2d2 <vfprintf+0x4c>
 302:	51 2c       	mov	r5, r1
 304:	31 2c       	mov	r3, r1
 306:	20 e0       	ldi	r18, 0x00	; 0
 308:	20 32       	cpi	r18, 0x20	; 32
 30a:	a0 f4       	brcc	.+40     	; 0x334 <vfprintf+0xae>
 30c:	8b 32       	cpi	r24, 0x2B	; 43
 30e:	69 f0       	breq	.+26     	; 0x32a <vfprintf+0xa4>
 310:	30 f4       	brcc	.+12     	; 0x31e <vfprintf+0x98>
 312:	80 32       	cpi	r24, 0x20	; 32
 314:	59 f0       	breq	.+22     	; 0x32c <vfprintf+0xa6>
 316:	83 32       	cpi	r24, 0x23	; 35
 318:	69 f4       	brne	.+26     	; 0x334 <vfprintf+0xae>
 31a:	20 61       	ori	r18, 0x10	; 16
 31c:	2c c0       	rjmp	.+88     	; 0x376 <vfprintf+0xf0>
 31e:	8d 32       	cpi	r24, 0x2D	; 45
 320:	39 f0       	breq	.+14     	; 0x330 <vfprintf+0xaa>
 322:	80 33       	cpi	r24, 0x30	; 48
 324:	39 f4       	brne	.+14     	; 0x334 <vfprintf+0xae>
 326:	21 60       	ori	r18, 0x01	; 1
 328:	26 c0       	rjmp	.+76     	; 0x376 <vfprintf+0xf0>
 32a:	22 60       	ori	r18, 0x02	; 2
 32c:	24 60       	ori	r18, 0x04	; 4
 32e:	23 c0       	rjmp	.+70     	; 0x376 <vfprintf+0xf0>
 330:	28 60       	ori	r18, 0x08	; 8
 332:	21 c0       	rjmp	.+66     	; 0x376 <vfprintf+0xf0>
 334:	27 fd       	sbrc	r18, 7
 336:	27 c0       	rjmp	.+78     	; 0x386 <vfprintf+0x100>
 338:	30 ed       	ldi	r19, 0xD0	; 208
 33a:	38 0f       	add	r19, r24
 33c:	3a 30       	cpi	r19, 0x0A	; 10
 33e:	78 f4       	brcc	.+30     	; 0x35e <vfprintf+0xd8>
 340:	26 ff       	sbrs	r18, 6
 342:	06 c0       	rjmp	.+12     	; 0x350 <vfprintf+0xca>
 344:	fa e0       	ldi	r31, 0x0A	; 10
 346:	5f 9e       	mul	r5, r31
 348:	30 0d       	add	r19, r0
 34a:	11 24       	eor	r1, r1
 34c:	53 2e       	mov	r5, r19
 34e:	13 c0       	rjmp	.+38     	; 0x376 <vfprintf+0xf0>
 350:	8a e0       	ldi	r24, 0x0A	; 10
 352:	38 9e       	mul	r3, r24
 354:	30 0d       	add	r19, r0
 356:	11 24       	eor	r1, r1
 358:	33 2e       	mov	r3, r19
 35a:	20 62       	ori	r18, 0x20	; 32
 35c:	0c c0       	rjmp	.+24     	; 0x376 <vfprintf+0xf0>
 35e:	8e 32       	cpi	r24, 0x2E	; 46
 360:	21 f4       	brne	.+8      	; 0x36a <vfprintf+0xe4>
 362:	26 fd       	sbrc	r18, 6
 364:	5f c1       	rjmp	.+702    	; 0x624 <vfprintf+0x39e>
 366:	20 64       	ori	r18, 0x40	; 64
 368:	06 c0       	rjmp	.+12     	; 0x376 <vfprintf+0xf0>
 36a:	8c 36       	cpi	r24, 0x6C	; 108
 36c:	11 f4       	brne	.+4      	; 0x372 <vfprintf+0xec>
 36e:	20 68       	ori	r18, 0x80	; 128
 370:	02 c0       	rjmp	.+4      	; 0x376 <vfprintf+0xf0>
 372:	88 36       	cpi	r24, 0x68	; 104
 374:	41 f4       	brne	.+16     	; 0x386 <vfprintf+0x100>
 376:	f6 01       	movw	r30, r12
 378:	93 fd       	sbrc	r25, 3
 37a:	85 91       	lpm	r24, Z+
 37c:	93 ff       	sbrs	r25, 3
 37e:	81 91       	ld	r24, Z+
 380:	6f 01       	movw	r12, r30
 382:	81 11       	cpse	r24, r1
 384:	c1 cf       	rjmp	.-126    	; 0x308 <vfprintf+0x82>
 386:	98 2f       	mov	r25, r24
 388:	9f 7d       	andi	r25, 0xDF	; 223
 38a:	95 54       	subi	r25, 0x45	; 69
 38c:	93 30       	cpi	r25, 0x03	; 3
 38e:	28 f4       	brcc	.+10     	; 0x39a <vfprintf+0x114>
 390:	0c 5f       	subi	r16, 0xFC	; 252
 392:	1f 4f       	sbci	r17, 0xFF	; 255
 394:	ff e3       	ldi	r31, 0x3F	; 63
 396:	f9 83       	std	Y+1, r31	; 0x01
 398:	0d c0       	rjmp	.+26     	; 0x3b4 <vfprintf+0x12e>
 39a:	83 36       	cpi	r24, 0x63	; 99
 39c:	31 f0       	breq	.+12     	; 0x3aa <vfprintf+0x124>
 39e:	83 37       	cpi	r24, 0x73	; 115
 3a0:	71 f0       	breq	.+28     	; 0x3be <vfprintf+0x138>
 3a2:	83 35       	cpi	r24, 0x53	; 83
 3a4:	09 f0       	breq	.+2      	; 0x3a8 <vfprintf+0x122>
 3a6:	57 c0       	rjmp	.+174    	; 0x456 <vfprintf+0x1d0>
 3a8:	21 c0       	rjmp	.+66     	; 0x3ec <vfprintf+0x166>
 3aa:	f8 01       	movw	r30, r16
 3ac:	80 81       	ld	r24, Z
 3ae:	89 83       	std	Y+1, r24	; 0x01
 3b0:	0e 5f       	subi	r16, 0xFE	; 254
 3b2:	1f 4f       	sbci	r17, 0xFF	; 255
 3b4:	44 24       	eor	r4, r4
 3b6:	43 94       	inc	r4
 3b8:	51 2c       	mov	r5, r1
 3ba:	54 01       	movw	r10, r8
 3bc:	14 c0       	rjmp	.+40     	; 0x3e6 <vfprintf+0x160>
 3be:	38 01       	movw	r6, r16
 3c0:	f2 e0       	ldi	r31, 0x02	; 2
 3c2:	6f 0e       	add	r6, r31
 3c4:	71 1c       	adc	r7, r1
 3c6:	f8 01       	movw	r30, r16
 3c8:	a0 80       	ld	r10, Z
 3ca:	b1 80       	ldd	r11, Z+1	; 0x01
 3cc:	26 ff       	sbrs	r18, 6
 3ce:	03 c0       	rjmp	.+6      	; 0x3d6 <vfprintf+0x150>
 3d0:	65 2d       	mov	r22, r5
 3d2:	70 e0       	ldi	r23, 0x00	; 0
 3d4:	02 c0       	rjmp	.+4      	; 0x3da <vfprintf+0x154>
 3d6:	6f ef       	ldi	r22, 0xFF	; 255
 3d8:	7f ef       	ldi	r23, 0xFF	; 255
 3da:	c5 01       	movw	r24, r10
 3dc:	2c 87       	std	Y+12, r18	; 0x0c
 3de:	4c d1       	rcall	.+664    	; 0x678 <strnlen>
 3e0:	2c 01       	movw	r4, r24
 3e2:	83 01       	movw	r16, r6
 3e4:	2c 85       	ldd	r18, Y+12	; 0x0c
 3e6:	2f 77       	andi	r18, 0x7F	; 127
 3e8:	22 2e       	mov	r2, r18
 3ea:	16 c0       	rjmp	.+44     	; 0x418 <vfprintf+0x192>
 3ec:	38 01       	movw	r6, r16
 3ee:	f2 e0       	ldi	r31, 0x02	; 2
 3f0:	6f 0e       	add	r6, r31
 3f2:	71 1c       	adc	r7, r1
 3f4:	f8 01       	movw	r30, r16
 3f6:	a0 80       	ld	r10, Z
 3f8:	b1 80       	ldd	r11, Z+1	; 0x01
 3fa:	26 ff       	sbrs	r18, 6
 3fc:	03 c0       	rjmp	.+6      	; 0x404 <vfprintf+0x17e>
 3fe:	65 2d       	mov	r22, r5
 400:	70 e0       	ldi	r23, 0x00	; 0
 402:	02 c0       	rjmp	.+4      	; 0x408 <vfprintf+0x182>
 404:	6f ef       	ldi	r22, 0xFF	; 255
 406:	7f ef       	ldi	r23, 0xFF	; 255
 408:	c5 01       	movw	r24, r10
 40a:	2c 87       	std	Y+12, r18	; 0x0c
 40c:	2a d1       	rcall	.+596    	; 0x662 <strnlen_P>
 40e:	2c 01       	movw	r4, r24
 410:	2c 85       	ldd	r18, Y+12	; 0x0c
 412:	20 68       	ori	r18, 0x80	; 128
 414:	22 2e       	mov	r2, r18
 416:	83 01       	movw	r16, r6
 418:	23 fc       	sbrc	r2, 3
 41a:	19 c0       	rjmp	.+50     	; 0x44e <vfprintf+0x1c8>
 41c:	83 2d       	mov	r24, r3
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	48 16       	cp	r4, r24
 422:	59 06       	cpc	r5, r25
 424:	a0 f4       	brcc	.+40     	; 0x44e <vfprintf+0x1c8>
 426:	b7 01       	movw	r22, r14
 428:	80 e2       	ldi	r24, 0x20	; 32
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	30 d1       	rcall	.+608    	; 0x68e <fputc>
 42e:	3a 94       	dec	r3
 430:	f5 cf       	rjmp	.-22     	; 0x41c <vfprintf+0x196>
 432:	f5 01       	movw	r30, r10
 434:	27 fc       	sbrc	r2, 7
 436:	85 91       	lpm	r24, Z+
 438:	27 fe       	sbrs	r2, 7
 43a:	81 91       	ld	r24, Z+
 43c:	5f 01       	movw	r10, r30
 43e:	b7 01       	movw	r22, r14
 440:	90 e0       	ldi	r25, 0x00	; 0
 442:	25 d1       	rcall	.+586    	; 0x68e <fputc>
 444:	31 10       	cpse	r3, r1
 446:	3a 94       	dec	r3
 448:	f1 e0       	ldi	r31, 0x01	; 1
 44a:	4f 1a       	sub	r4, r31
 44c:	51 08       	sbc	r5, r1
 44e:	41 14       	cp	r4, r1
 450:	51 04       	cpc	r5, r1
 452:	79 f7       	brne	.-34     	; 0x432 <vfprintf+0x1ac>
 454:	de c0       	rjmp	.+444    	; 0x612 <vfprintf+0x38c>
 456:	84 36       	cpi	r24, 0x64	; 100
 458:	11 f0       	breq	.+4      	; 0x45e <vfprintf+0x1d8>
 45a:	89 36       	cpi	r24, 0x69	; 105
 45c:	31 f5       	brne	.+76     	; 0x4aa <vfprintf+0x224>
 45e:	f8 01       	movw	r30, r16
 460:	27 ff       	sbrs	r18, 7
 462:	07 c0       	rjmp	.+14     	; 0x472 <vfprintf+0x1ec>
 464:	60 81       	ld	r22, Z
 466:	71 81       	ldd	r23, Z+1	; 0x01
 468:	82 81       	ldd	r24, Z+2	; 0x02
 46a:	93 81       	ldd	r25, Z+3	; 0x03
 46c:	0c 5f       	subi	r16, 0xFC	; 252
 46e:	1f 4f       	sbci	r17, 0xFF	; 255
 470:	08 c0       	rjmp	.+16     	; 0x482 <vfprintf+0x1fc>
 472:	60 81       	ld	r22, Z
 474:	71 81       	ldd	r23, Z+1	; 0x01
 476:	88 27       	eor	r24, r24
 478:	77 fd       	sbrc	r23, 7
 47a:	80 95       	com	r24
 47c:	98 2f       	mov	r25, r24
 47e:	0e 5f       	subi	r16, 0xFE	; 254
 480:	1f 4f       	sbci	r17, 0xFF	; 255
 482:	2f 76       	andi	r18, 0x6F	; 111
 484:	b2 2e       	mov	r11, r18
 486:	97 ff       	sbrs	r25, 7
 488:	09 c0       	rjmp	.+18     	; 0x49c <vfprintf+0x216>
 48a:	90 95       	com	r25
 48c:	80 95       	com	r24
 48e:	70 95       	com	r23
 490:	61 95       	neg	r22
 492:	7f 4f       	sbci	r23, 0xFF	; 255
 494:	8f 4f       	sbci	r24, 0xFF	; 255
 496:	9f 4f       	sbci	r25, 0xFF	; 255
 498:	20 68       	ori	r18, 0x80	; 128
 49a:	b2 2e       	mov	r11, r18
 49c:	2a e0       	ldi	r18, 0x0A	; 10
 49e:	30 e0       	ldi	r19, 0x00	; 0
 4a0:	a4 01       	movw	r20, r8
 4a2:	27 d1       	rcall	.+590    	; 0x6f2 <__ultoa_invert>
 4a4:	a8 2e       	mov	r10, r24
 4a6:	a8 18       	sub	r10, r8
 4a8:	43 c0       	rjmp	.+134    	; 0x530 <vfprintf+0x2aa>
 4aa:	85 37       	cpi	r24, 0x75	; 117
 4ac:	29 f4       	brne	.+10     	; 0x4b8 <vfprintf+0x232>
 4ae:	2f 7e       	andi	r18, 0xEF	; 239
 4b0:	b2 2e       	mov	r11, r18
 4b2:	2a e0       	ldi	r18, 0x0A	; 10
 4b4:	30 e0       	ldi	r19, 0x00	; 0
 4b6:	25 c0       	rjmp	.+74     	; 0x502 <vfprintf+0x27c>
 4b8:	f2 2f       	mov	r31, r18
 4ba:	f9 7f       	andi	r31, 0xF9	; 249
 4bc:	bf 2e       	mov	r11, r31
 4be:	8f 36       	cpi	r24, 0x6F	; 111
 4c0:	c1 f0       	breq	.+48     	; 0x4f2 <vfprintf+0x26c>
 4c2:	18 f4       	brcc	.+6      	; 0x4ca <vfprintf+0x244>
 4c4:	88 35       	cpi	r24, 0x58	; 88
 4c6:	79 f0       	breq	.+30     	; 0x4e6 <vfprintf+0x260>
 4c8:	ad c0       	rjmp	.+346    	; 0x624 <vfprintf+0x39e>
 4ca:	80 37       	cpi	r24, 0x70	; 112
 4cc:	19 f0       	breq	.+6      	; 0x4d4 <vfprintf+0x24e>
 4ce:	88 37       	cpi	r24, 0x78	; 120
 4d0:	21 f0       	breq	.+8      	; 0x4da <vfprintf+0x254>
 4d2:	a8 c0       	rjmp	.+336    	; 0x624 <vfprintf+0x39e>
 4d4:	2f 2f       	mov	r18, r31
 4d6:	20 61       	ori	r18, 0x10	; 16
 4d8:	b2 2e       	mov	r11, r18
 4da:	b4 fe       	sbrs	r11, 4
 4dc:	0d c0       	rjmp	.+26     	; 0x4f8 <vfprintf+0x272>
 4de:	8b 2d       	mov	r24, r11
 4e0:	84 60       	ori	r24, 0x04	; 4
 4e2:	b8 2e       	mov	r11, r24
 4e4:	09 c0       	rjmp	.+18     	; 0x4f8 <vfprintf+0x272>
 4e6:	24 ff       	sbrs	r18, 4
 4e8:	0a c0       	rjmp	.+20     	; 0x4fe <vfprintf+0x278>
 4ea:	9f 2f       	mov	r25, r31
 4ec:	96 60       	ori	r25, 0x06	; 6
 4ee:	b9 2e       	mov	r11, r25
 4f0:	06 c0       	rjmp	.+12     	; 0x4fe <vfprintf+0x278>
 4f2:	28 e0       	ldi	r18, 0x08	; 8
 4f4:	30 e0       	ldi	r19, 0x00	; 0
 4f6:	05 c0       	rjmp	.+10     	; 0x502 <vfprintf+0x27c>
 4f8:	20 e1       	ldi	r18, 0x10	; 16
 4fa:	30 e0       	ldi	r19, 0x00	; 0
 4fc:	02 c0       	rjmp	.+4      	; 0x502 <vfprintf+0x27c>
 4fe:	20 e1       	ldi	r18, 0x10	; 16
 500:	32 e0       	ldi	r19, 0x02	; 2
 502:	f8 01       	movw	r30, r16
 504:	b7 fe       	sbrs	r11, 7
 506:	07 c0       	rjmp	.+14     	; 0x516 <vfprintf+0x290>
 508:	60 81       	ld	r22, Z
 50a:	71 81       	ldd	r23, Z+1	; 0x01
 50c:	82 81       	ldd	r24, Z+2	; 0x02
 50e:	93 81       	ldd	r25, Z+3	; 0x03
 510:	0c 5f       	subi	r16, 0xFC	; 252
 512:	1f 4f       	sbci	r17, 0xFF	; 255
 514:	06 c0       	rjmp	.+12     	; 0x522 <vfprintf+0x29c>
 516:	60 81       	ld	r22, Z
 518:	71 81       	ldd	r23, Z+1	; 0x01
 51a:	80 e0       	ldi	r24, 0x00	; 0
 51c:	90 e0       	ldi	r25, 0x00	; 0
 51e:	0e 5f       	subi	r16, 0xFE	; 254
 520:	1f 4f       	sbci	r17, 0xFF	; 255
 522:	a4 01       	movw	r20, r8
 524:	e6 d0       	rcall	.+460    	; 0x6f2 <__ultoa_invert>
 526:	a8 2e       	mov	r10, r24
 528:	a8 18       	sub	r10, r8
 52a:	fb 2d       	mov	r31, r11
 52c:	ff 77       	andi	r31, 0x7F	; 127
 52e:	bf 2e       	mov	r11, r31
 530:	b6 fe       	sbrs	r11, 6
 532:	0b c0       	rjmp	.+22     	; 0x54a <vfprintf+0x2c4>
 534:	2b 2d       	mov	r18, r11
 536:	2e 7f       	andi	r18, 0xFE	; 254
 538:	a5 14       	cp	r10, r5
 53a:	50 f4       	brcc	.+20     	; 0x550 <vfprintf+0x2ca>
 53c:	b4 fe       	sbrs	r11, 4
 53e:	0a c0       	rjmp	.+20     	; 0x554 <vfprintf+0x2ce>
 540:	b2 fc       	sbrc	r11, 2
 542:	08 c0       	rjmp	.+16     	; 0x554 <vfprintf+0x2ce>
 544:	2b 2d       	mov	r18, r11
 546:	2e 7e       	andi	r18, 0xEE	; 238
 548:	05 c0       	rjmp	.+10     	; 0x554 <vfprintf+0x2ce>
 54a:	7a 2c       	mov	r7, r10
 54c:	2b 2d       	mov	r18, r11
 54e:	03 c0       	rjmp	.+6      	; 0x556 <vfprintf+0x2d0>
 550:	7a 2c       	mov	r7, r10
 552:	01 c0       	rjmp	.+2      	; 0x556 <vfprintf+0x2d0>
 554:	75 2c       	mov	r7, r5
 556:	24 ff       	sbrs	r18, 4
 558:	0d c0       	rjmp	.+26     	; 0x574 <vfprintf+0x2ee>
 55a:	fe 01       	movw	r30, r28
 55c:	ea 0d       	add	r30, r10
 55e:	f1 1d       	adc	r31, r1
 560:	80 81       	ld	r24, Z
 562:	80 33       	cpi	r24, 0x30	; 48
 564:	11 f4       	brne	.+4      	; 0x56a <vfprintf+0x2e4>
 566:	29 7e       	andi	r18, 0xE9	; 233
 568:	09 c0       	rjmp	.+18     	; 0x57c <vfprintf+0x2f6>
 56a:	22 ff       	sbrs	r18, 2
 56c:	06 c0       	rjmp	.+12     	; 0x57a <vfprintf+0x2f4>
 56e:	73 94       	inc	r7
 570:	73 94       	inc	r7
 572:	04 c0       	rjmp	.+8      	; 0x57c <vfprintf+0x2f6>
 574:	82 2f       	mov	r24, r18
 576:	86 78       	andi	r24, 0x86	; 134
 578:	09 f0       	breq	.+2      	; 0x57c <vfprintf+0x2f6>
 57a:	73 94       	inc	r7
 57c:	23 fd       	sbrc	r18, 3
 57e:	12 c0       	rjmp	.+36     	; 0x5a4 <vfprintf+0x31e>
 580:	20 ff       	sbrs	r18, 0
 582:	06 c0       	rjmp	.+12     	; 0x590 <vfprintf+0x30a>
 584:	5a 2c       	mov	r5, r10
 586:	73 14       	cp	r7, r3
 588:	18 f4       	brcc	.+6      	; 0x590 <vfprintf+0x30a>
 58a:	53 0c       	add	r5, r3
 58c:	57 18       	sub	r5, r7
 58e:	73 2c       	mov	r7, r3
 590:	73 14       	cp	r7, r3
 592:	60 f4       	brcc	.+24     	; 0x5ac <vfprintf+0x326>
 594:	b7 01       	movw	r22, r14
 596:	80 e2       	ldi	r24, 0x20	; 32
 598:	90 e0       	ldi	r25, 0x00	; 0
 59a:	2c 87       	std	Y+12, r18	; 0x0c
 59c:	78 d0       	rcall	.+240    	; 0x68e <fputc>
 59e:	73 94       	inc	r7
 5a0:	2c 85       	ldd	r18, Y+12	; 0x0c
 5a2:	f6 cf       	rjmp	.-20     	; 0x590 <vfprintf+0x30a>
 5a4:	73 14       	cp	r7, r3
 5a6:	10 f4       	brcc	.+4      	; 0x5ac <vfprintf+0x326>
 5a8:	37 18       	sub	r3, r7
 5aa:	01 c0       	rjmp	.+2      	; 0x5ae <vfprintf+0x328>
 5ac:	31 2c       	mov	r3, r1
 5ae:	24 ff       	sbrs	r18, 4
 5b0:	11 c0       	rjmp	.+34     	; 0x5d4 <vfprintf+0x34e>
 5b2:	b7 01       	movw	r22, r14
 5b4:	80 e3       	ldi	r24, 0x30	; 48
 5b6:	90 e0       	ldi	r25, 0x00	; 0
 5b8:	2c 87       	std	Y+12, r18	; 0x0c
 5ba:	69 d0       	rcall	.+210    	; 0x68e <fputc>
 5bc:	2c 85       	ldd	r18, Y+12	; 0x0c
 5be:	22 ff       	sbrs	r18, 2
 5c0:	16 c0       	rjmp	.+44     	; 0x5ee <vfprintf+0x368>
 5c2:	21 ff       	sbrs	r18, 1
 5c4:	03 c0       	rjmp	.+6      	; 0x5cc <vfprintf+0x346>
 5c6:	88 e5       	ldi	r24, 0x58	; 88
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	02 c0       	rjmp	.+4      	; 0x5d0 <vfprintf+0x34a>
 5cc:	88 e7       	ldi	r24, 0x78	; 120
 5ce:	90 e0       	ldi	r25, 0x00	; 0
 5d0:	b7 01       	movw	r22, r14
 5d2:	0c c0       	rjmp	.+24     	; 0x5ec <vfprintf+0x366>
 5d4:	82 2f       	mov	r24, r18
 5d6:	86 78       	andi	r24, 0x86	; 134
 5d8:	51 f0       	breq	.+20     	; 0x5ee <vfprintf+0x368>
 5da:	21 fd       	sbrc	r18, 1
 5dc:	02 c0       	rjmp	.+4      	; 0x5e2 <vfprintf+0x35c>
 5de:	80 e2       	ldi	r24, 0x20	; 32
 5e0:	01 c0       	rjmp	.+2      	; 0x5e4 <vfprintf+0x35e>
 5e2:	8b e2       	ldi	r24, 0x2B	; 43
 5e4:	27 fd       	sbrc	r18, 7
 5e6:	8d e2       	ldi	r24, 0x2D	; 45
 5e8:	b7 01       	movw	r22, r14
 5ea:	90 e0       	ldi	r25, 0x00	; 0
 5ec:	50 d0       	rcall	.+160    	; 0x68e <fputc>
 5ee:	a5 14       	cp	r10, r5
 5f0:	30 f4       	brcc	.+12     	; 0x5fe <vfprintf+0x378>
 5f2:	b7 01       	movw	r22, r14
 5f4:	80 e3       	ldi	r24, 0x30	; 48
 5f6:	90 e0       	ldi	r25, 0x00	; 0
 5f8:	4a d0       	rcall	.+148    	; 0x68e <fputc>
 5fa:	5a 94       	dec	r5
 5fc:	f8 cf       	rjmp	.-16     	; 0x5ee <vfprintf+0x368>
 5fe:	aa 94       	dec	r10
 600:	f4 01       	movw	r30, r8
 602:	ea 0d       	add	r30, r10
 604:	f1 1d       	adc	r31, r1
 606:	80 81       	ld	r24, Z
 608:	b7 01       	movw	r22, r14
 60a:	90 e0       	ldi	r25, 0x00	; 0
 60c:	40 d0       	rcall	.+128    	; 0x68e <fputc>
 60e:	a1 10       	cpse	r10, r1
 610:	f6 cf       	rjmp	.-20     	; 0x5fe <vfprintf+0x378>
 612:	33 20       	and	r3, r3
 614:	09 f4       	brne	.+2      	; 0x618 <vfprintf+0x392>
 616:	5d ce       	rjmp	.-838    	; 0x2d2 <vfprintf+0x4c>
 618:	b7 01       	movw	r22, r14
 61a:	80 e2       	ldi	r24, 0x20	; 32
 61c:	90 e0       	ldi	r25, 0x00	; 0
 61e:	37 d0       	rcall	.+110    	; 0x68e <fputc>
 620:	3a 94       	dec	r3
 622:	f7 cf       	rjmp	.-18     	; 0x612 <vfprintf+0x38c>
 624:	f7 01       	movw	r30, r14
 626:	86 81       	ldd	r24, Z+6	; 0x06
 628:	97 81       	ldd	r25, Z+7	; 0x07
 62a:	02 c0       	rjmp	.+4      	; 0x630 <vfprintf+0x3aa>
 62c:	8f ef       	ldi	r24, 0xFF	; 255
 62e:	9f ef       	ldi	r25, 0xFF	; 255
 630:	2c 96       	adiw	r28, 0x0c	; 12
 632:	0f b6       	in	r0, 0x3f	; 63
 634:	f8 94       	cli
 636:	de bf       	out	0x3e, r29	; 62
 638:	0f be       	out	0x3f, r0	; 63
 63a:	cd bf       	out	0x3d, r28	; 61
 63c:	df 91       	pop	r29
 63e:	cf 91       	pop	r28
 640:	1f 91       	pop	r17
 642:	0f 91       	pop	r16
 644:	ff 90       	pop	r15
 646:	ef 90       	pop	r14
 648:	df 90       	pop	r13
 64a:	cf 90       	pop	r12
 64c:	bf 90       	pop	r11
 64e:	af 90       	pop	r10
 650:	9f 90       	pop	r9
 652:	8f 90       	pop	r8
 654:	7f 90       	pop	r7
 656:	6f 90       	pop	r6
 658:	5f 90       	pop	r5
 65a:	4f 90       	pop	r4
 65c:	3f 90       	pop	r3
 65e:	2f 90       	pop	r2
 660:	08 95       	ret

00000662 <strnlen_P>:
 662:	fc 01       	movw	r30, r24
 664:	05 90       	lpm	r0, Z+
 666:	61 50       	subi	r22, 0x01	; 1
 668:	70 40       	sbci	r23, 0x00	; 0
 66a:	01 10       	cpse	r0, r1
 66c:	d8 f7       	brcc	.-10     	; 0x664 <strnlen_P+0x2>
 66e:	80 95       	com	r24
 670:	90 95       	com	r25
 672:	8e 0f       	add	r24, r30
 674:	9f 1f       	adc	r25, r31
 676:	08 95       	ret

00000678 <strnlen>:
 678:	fc 01       	movw	r30, r24
 67a:	61 50       	subi	r22, 0x01	; 1
 67c:	70 40       	sbci	r23, 0x00	; 0
 67e:	01 90       	ld	r0, Z+
 680:	01 10       	cpse	r0, r1
 682:	d8 f7       	brcc	.-10     	; 0x67a <strnlen+0x2>
 684:	80 95       	com	r24
 686:	90 95       	com	r25
 688:	8e 0f       	add	r24, r30
 68a:	9f 1f       	adc	r25, r31
 68c:	08 95       	ret

0000068e <fputc>:
 68e:	0f 93       	push	r16
 690:	1f 93       	push	r17
 692:	cf 93       	push	r28
 694:	df 93       	push	r29
 696:	18 2f       	mov	r17, r24
 698:	09 2f       	mov	r16, r25
 69a:	eb 01       	movw	r28, r22
 69c:	8b 81       	ldd	r24, Y+3	; 0x03
 69e:	81 fd       	sbrc	r24, 1
 6a0:	03 c0       	rjmp	.+6      	; 0x6a8 <fputc+0x1a>
 6a2:	8f ef       	ldi	r24, 0xFF	; 255
 6a4:	9f ef       	ldi	r25, 0xFF	; 255
 6a6:	20 c0       	rjmp	.+64     	; 0x6e8 <fputc+0x5a>
 6a8:	82 ff       	sbrs	r24, 2
 6aa:	10 c0       	rjmp	.+32     	; 0x6cc <fputc+0x3e>
 6ac:	4e 81       	ldd	r20, Y+6	; 0x06
 6ae:	5f 81       	ldd	r21, Y+7	; 0x07
 6b0:	2c 81       	ldd	r18, Y+4	; 0x04
 6b2:	3d 81       	ldd	r19, Y+5	; 0x05
 6b4:	42 17       	cp	r20, r18
 6b6:	53 07       	cpc	r21, r19
 6b8:	7c f4       	brge	.+30     	; 0x6d8 <fputc+0x4a>
 6ba:	e8 81       	ld	r30, Y
 6bc:	f9 81       	ldd	r31, Y+1	; 0x01
 6be:	9f 01       	movw	r18, r30
 6c0:	2f 5f       	subi	r18, 0xFF	; 255
 6c2:	3f 4f       	sbci	r19, 0xFF	; 255
 6c4:	39 83       	std	Y+1, r19	; 0x01
 6c6:	28 83       	st	Y, r18
 6c8:	10 83       	st	Z, r17
 6ca:	06 c0       	rjmp	.+12     	; 0x6d8 <fputc+0x4a>
 6cc:	e8 85       	ldd	r30, Y+8	; 0x08
 6ce:	f9 85       	ldd	r31, Y+9	; 0x09
 6d0:	81 2f       	mov	r24, r17
 6d2:	09 95       	icall
 6d4:	89 2b       	or	r24, r25
 6d6:	29 f7       	brne	.-54     	; 0x6a2 <fputc+0x14>
 6d8:	2e 81       	ldd	r18, Y+6	; 0x06
 6da:	3f 81       	ldd	r19, Y+7	; 0x07
 6dc:	2f 5f       	subi	r18, 0xFF	; 255
 6de:	3f 4f       	sbci	r19, 0xFF	; 255
 6e0:	3f 83       	std	Y+7, r19	; 0x07
 6e2:	2e 83       	std	Y+6, r18	; 0x06
 6e4:	81 2f       	mov	r24, r17
 6e6:	90 2f       	mov	r25, r16
 6e8:	df 91       	pop	r29
 6ea:	cf 91       	pop	r28
 6ec:	1f 91       	pop	r17
 6ee:	0f 91       	pop	r16
 6f0:	08 95       	ret

000006f2 <__ultoa_invert>:
 6f2:	fa 01       	movw	r30, r20
 6f4:	aa 27       	eor	r26, r26
 6f6:	28 30       	cpi	r18, 0x08	; 8
 6f8:	51 f1       	breq	.+84     	; 0x74e <__ultoa_invert+0x5c>
 6fa:	20 31       	cpi	r18, 0x10	; 16
 6fc:	81 f1       	breq	.+96     	; 0x75e <__ultoa_invert+0x6c>
 6fe:	e8 94       	clt
 700:	6f 93       	push	r22
 702:	6e 7f       	andi	r22, 0xFE	; 254
 704:	6e 5f       	subi	r22, 0xFE	; 254
 706:	7f 4f       	sbci	r23, 0xFF	; 255
 708:	8f 4f       	sbci	r24, 0xFF	; 255
 70a:	9f 4f       	sbci	r25, 0xFF	; 255
 70c:	af 4f       	sbci	r26, 0xFF	; 255
 70e:	b1 e0       	ldi	r27, 0x01	; 1
 710:	3e d0       	rcall	.+124    	; 0x78e <__ultoa_invert+0x9c>
 712:	b4 e0       	ldi	r27, 0x04	; 4
 714:	3c d0       	rcall	.+120    	; 0x78e <__ultoa_invert+0x9c>
 716:	67 0f       	add	r22, r23
 718:	78 1f       	adc	r23, r24
 71a:	89 1f       	adc	r24, r25
 71c:	9a 1f       	adc	r25, r26
 71e:	a1 1d       	adc	r26, r1
 720:	68 0f       	add	r22, r24
 722:	79 1f       	adc	r23, r25
 724:	8a 1f       	adc	r24, r26
 726:	91 1d       	adc	r25, r1
 728:	a1 1d       	adc	r26, r1
 72a:	6a 0f       	add	r22, r26
 72c:	71 1d       	adc	r23, r1
 72e:	81 1d       	adc	r24, r1
 730:	91 1d       	adc	r25, r1
 732:	a1 1d       	adc	r26, r1
 734:	20 d0       	rcall	.+64     	; 0x776 <__ultoa_invert+0x84>
 736:	09 f4       	brne	.+2      	; 0x73a <__ultoa_invert+0x48>
 738:	68 94       	set
 73a:	3f 91       	pop	r19
 73c:	2a e0       	ldi	r18, 0x0A	; 10
 73e:	26 9f       	mul	r18, r22
 740:	11 24       	eor	r1, r1
 742:	30 19       	sub	r19, r0
 744:	30 5d       	subi	r19, 0xD0	; 208
 746:	31 93       	st	Z+, r19
 748:	de f6       	brtc	.-74     	; 0x700 <__ultoa_invert+0xe>
 74a:	cf 01       	movw	r24, r30
 74c:	08 95       	ret
 74e:	46 2f       	mov	r20, r22
 750:	47 70       	andi	r20, 0x07	; 7
 752:	40 5d       	subi	r20, 0xD0	; 208
 754:	41 93       	st	Z+, r20
 756:	b3 e0       	ldi	r27, 0x03	; 3
 758:	0f d0       	rcall	.+30     	; 0x778 <__ultoa_invert+0x86>
 75a:	c9 f7       	brne	.-14     	; 0x74e <__ultoa_invert+0x5c>
 75c:	f6 cf       	rjmp	.-20     	; 0x74a <__ultoa_invert+0x58>
 75e:	46 2f       	mov	r20, r22
 760:	4f 70       	andi	r20, 0x0F	; 15
 762:	40 5d       	subi	r20, 0xD0	; 208
 764:	4a 33       	cpi	r20, 0x3A	; 58
 766:	18 f0       	brcs	.+6      	; 0x76e <__ultoa_invert+0x7c>
 768:	49 5d       	subi	r20, 0xD9	; 217
 76a:	31 fd       	sbrc	r19, 1
 76c:	40 52       	subi	r20, 0x20	; 32
 76e:	41 93       	st	Z+, r20
 770:	02 d0       	rcall	.+4      	; 0x776 <__ultoa_invert+0x84>
 772:	a9 f7       	brne	.-22     	; 0x75e <__ultoa_invert+0x6c>
 774:	ea cf       	rjmp	.-44     	; 0x74a <__ultoa_invert+0x58>
 776:	b4 e0       	ldi	r27, 0x04	; 4
 778:	a6 95       	lsr	r26
 77a:	97 95       	ror	r25
 77c:	87 95       	ror	r24
 77e:	77 95       	ror	r23
 780:	67 95       	ror	r22
 782:	ba 95       	dec	r27
 784:	c9 f7       	brne	.-14     	; 0x778 <__ultoa_invert+0x86>
 786:	00 97       	sbiw	r24, 0x00	; 0
 788:	61 05       	cpc	r22, r1
 78a:	71 05       	cpc	r23, r1
 78c:	08 95       	ret
 78e:	9b 01       	movw	r18, r22
 790:	ac 01       	movw	r20, r24
 792:	0a 2e       	mov	r0, r26
 794:	06 94       	lsr	r0
 796:	57 95       	ror	r21
 798:	47 95       	ror	r20
 79a:	37 95       	ror	r19
 79c:	27 95       	ror	r18
 79e:	ba 95       	dec	r27
 7a0:	c9 f7       	brne	.-14     	; 0x794 <__ultoa_invert+0xa2>
 7a2:	62 0f       	add	r22, r18
 7a4:	73 1f       	adc	r23, r19
 7a6:	84 1f       	adc	r24, r20
 7a8:	95 1f       	adc	r25, r21
 7aa:	a0 1d       	adc	r26, r0
 7ac:	08 95       	ret

000007ae <_exit>:
 7ae:	f8 94       	cli

000007b0 <__stop_program>:
 7b0:	ff cf       	rjmp	.-2      	; 0x7b0 <__stop_program>
